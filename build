#!/usr/bin/bash
#: Title        : Build C
#: Date         : 07-12-2018
#: Author       : 
#: Version      : 0.1
#: Description  : Personal script to build c source files
#: NOTE         : Always pass file paths in colons
#: Description  : Personal script to build c source files
#: NOTE         : Always pass file paths in colons
#: Description  : Personal script to build c source files
#: NOTE         : Always pass file paths in colons

UILD_MSG="Building"
SHELL_L=$(tput cols)                                            #Terminal width


POSITIONAL=()
COMPILER="gcc"
DEBUG=false
STD="c11"
RUN=false

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -d|--debug)
    DEBUG=true
    shift # past argument
    ;;
    -s|--std)
    STD="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--compiler)
    COMPILER="$2"
    shift # past argument
    shift # past value
    ;;
    -i|--input)
    INPUT="$2"
    INPUT=${INPUT//\\//}
    shift # past argument
    shift # past value
    ;;
    -o|--output)
    OUTPUT="$2"
    OUTPUT=${OUTPUT//\\//}
    shift # past argument
    shift # past value
    ;;

    -I|--addpath)
    INCL_PATH=$2
    INCL_PATH=${INCL_PATH//\\//}
    ARGS="-I ${INCL_PATH} ${ARGS}"
    # while [[ "-" != "${INCL_PATH:0:1}" ||  ]]; do
    #     INCLUDE_PATHS+=("${INCL_PATH}")
    #     shift
    #     INCL_PATH=$2
    #     INCL_PATH=${INCL_PATH//\\//}
    #     echo $INCL_PATH
    # done
    shift # past argument
    shift # past value
    ;;

    -r|--run)
    RUN=true
    shift # past argument
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

ARGS="${ARGS} -std=${STD} -o ${OUTPUT} $@ ${INPUT}"

if [ "${DEBUG}" = true ] ; then
    ARGS="-ggdb ${ARGS}"
fi


eval "printf '%.s=' {1..$SHELL_L}"                          #SEPARTORS
echo "$ARGS"                                              #For Verbose
printf "%-20s: %s\n" "${BUILD_MSG}" $(basename "${INPUT}")


#Remove

START=$(date +%s.%N)
gcc ${ARGS}  
ERR=$?
END=$(date +%s.%N)
ELAPSED=$(awk -v a="$END" -v b="$START" 'BEGIN { printf "%s", a-b }' </dev/null)


if [ $ERR -eq 0 ]
then
    printf "%s [Time Taken : %ss]\n" "Build Sucessful -----> $(basename $OUTPUT)" "$ELAPSED"

    if [ "${RUN}" = true ] ; then
        printf "\nExecuting $(basename $OUTPUT)\n"
        eval "printf '%.s-' {1..$SHELL_L}"                   #SEPARTORS

        $OUTPUT
    fi
fi

eval "printf '%.s=' {1..$SHELL_L}"                           #SEPARTORS
#: Description  : Personal script to build c source files
#: NOTE         : Always pass file paths in colons
